name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Run unit tests
      run: |
        cargo test --manifest-path Cargo.toml --test unit_tests

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Install Docker Compose V2
      run: |
        mkdir -p ~/.docker/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
        docker compose version
    
    - name: Start services with docker compose
      run: |
        cd sabredav-test
        docker compose up -d
    
    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 30
        docker compose ps
        echo "Checking if services are responding..."
        curl -f http://localhost:8080/ || (echo "Failed to connect to service" && exit 1)
    
    - name: Install Composer dependencies
      run: |
        cd sabredav-test
        docker compose run --rm sabredav composer install
    
    - name: Reset and seed database
      run: |
        cd sabredav-test
        ./reset-db.sh
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
    
    - name: Run E2E tests
      run: |
        cargo test --manifest-path Cargo.toml --test e2e_tests
      env:
        CALDAV_SERVER_URL: http://localhost:8080
        CALDAV_USERNAME: test
        CALDAV_PASSWORD: test
    
    - name: Debug - Show test logs if failed
      if: failure()
      run: |
        cd sabredav-test
        echo "=== Docker Compose Logs ==="
        docker compose logs
    
    - name: Stop services
      if: always()
      run: |
        cd sabredav-test
        docker compose down -v